<style lang="less">
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    font-size: 12rpx;
  }
</style>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'
  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/Home/Hoem'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#29AC3E',
        navigationBarTitleText: 'WeChat',
        navigationBarTextStyle: 'white',
        backgroundColorTop: '#f8f8f9',
        backgroundColorBottom: '#f8f8f9',
        backgroundColor: '#29AC3E'
      },
      tabBar: {
        color: '#999999',
        backgroundColor: '#ffffff',
        selectedColor: '#37BF4C',
        list: [{
          text: '首页',
          index: 'left',
          pagePath: 'pages/index',
          icon_class: 'iconfont icon-tab-home'
        }, {
          text: '个人中心',
          pagePath: 'pages/Home/Hoem'
        }]
      }
    }
    globalData = {
      userInfo: null
    }
    constructor() {
      super()
      this.use('promisify')
      this.intercept('request', {
        // 发出请求时的回调函数
        config(p) {
          // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
          p.timestamp = +new Date()
          // 必须返回OBJECT参数对象，否则无法发送请求到服务端
          return p
        },
        // 请求成功后的回调函数
        success(p) {
          // 可以在这里对收到的响应数据对象进行加工处理
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          if (p.statusCode === 200) {
            return p
          } else {
            throw new Error(p.data.msg || p.data)
          }
        },
        // 请求失败后的回调函数
        fail(p) {
          // 必须返回响应数据对象，否则后续无法对响应数据进行处理
          return p
        },
        // 请求完成时的回调函数(请求成功或失败都会被执行)
        complete(p) {}
      })
    }
    onLaunch() {}
  }
</script>
